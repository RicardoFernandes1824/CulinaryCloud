datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id              Int                   @id @default(autoincrement())
  email           String                @unique
  password        String
  name            String
  recipes         Recipe[] // One-to-many relationship between User and Recipe
  favouriteRecipe FavouriteRecipeUser[] // One-to-many relationship between User and FavouriteRecipe
}

model FavouriteRecipeUser {
  recipeID Int // Foreign key to Recipe
  userID   Int // Foreign key to User
  user     User @relation(fields: [userID], references: [id]) // Many-to-one with Users

  @@id(name: "favouriteid", [recipeID, userID])
}

model Recipe {
  id           Int                  @id @default(autoincrement())
  name         String
  ingredients  RecipeIngredient[] // One-to-many relationship with RecipeIngredient
  attachements recipeAttachements[]
  category     String
  notes        String?
  coverImage   String?
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt
  public       Boolean              @default(false)
  authorId     Int                // foreign key
  author       User                 @relation(fields: [authorId], references: [id])
}

model RecipeIngredient {
  recipeId     Int // Foreign key to Recipe
  ingredientId Int // Foreign key to Ingredient
  quantity     String // Define any other details specific to this Recipe-Ingredient link
  recipe     Recipe     @relation(fields: [recipeId], references: [id], onDelete: Cascade) // Many-to-one with Recipe
  ingredient Ingredient @relation(fields: [ingredientId], references: [id]) // Many-to-one with Ingredient

  @@id(name: "recipeIngredientID", [recipeId, ingredientId])
}

model Ingredient {
  id         Int                @id @default(autoincrement())
  name       String             @unique
  recipeUses RecipeIngredient[] // Many-to-one relationship with RecipeIngredient
}

model recipeAttachements {
  id       Int     @id @default(autoincrement())
  path     String? @unique
  tips     String?
  recipeId Int
  recipe   Recipe  @relation(fields: [recipeId], references: [id], onDelete: Cascade) // Many-to-one with Recipe
}
